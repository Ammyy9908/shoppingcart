{"version":3,"sources":["components/Header.jsx","components/Card.jsx","components/Section.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","props","className","id","this","cartcount","Component","Card","state","message1","message2","count","newCount","visibility1","visibility2","setState","message","changeCount","Increment","Decrement","image","name","class","src","onClick","onchangeCount","bind","style","onchangeCountDec","Products","changeCounter","App","counter","React","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.1382492a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\n\nclass Header extends Component\n{\n      render(props)\n      {\n            return(<div>\n                  <div className=\"hero is-warning is-large\">\n                  <div className=\"hero-body\" id=\"hero\">\n                  <div className=\"container\">\n                  <h1 className=\"title is-size-1\">Your Cart {this.props.cartcount}</h1>\n                  \n                  <p className=\"subtitle\">This Project is Built in React to Demonstrating Implmentation of Shopping Cart Item Add using React State & setState,props.</p>\n                  </div>\n                  </div>\n            </div>\n            </div>)\n      }\n}\n\nexport default Header;","import React from \"react\";\nimport { Component } from \"react\";\n\n\nclass Card extends Component\n{\n      \n      constructor(props)\n      {\n            super(props);\n            this.state ={\n                  message1:\"Add to Cart\",\n                  message2:\"Remove\",\n                  count:0,\n                  newCount:1,\n                  visibility1:\"inline\",\n                  visibility2:\"none\"\n            }\n      }\n      \n      Increment(){\n            this.setState({\n                  message:\"Added\",\n                  visibility1:\"none\",\n                  visibility2:\"inline\"\n            })\n\n      }\n\n      Decrement(){\n            this.setState({\n                  message:\"Add to cart\",\n                  visibility1:\"inline\",\n                  visibility2:\"none\"\n            })\n\n      }\n\n      onchangeCount()\n      {\n            this.props.changeCount(this.state.newCount);\n            this.Increment();\n      }\n      onchangeCountDec()\n      {\n            this.props.changeCount(-1);  \n            this.Decrement(); \n      }\n\n\n\n      \n      render(props)\n      {\n            const {image,name}=this.props;\n            return(<div class=\"card card1\">\n\t\t<div class=\"cover\">\n\t\t\t<img src={image}/>\n\t\t</div>\n\t\t<h4 class=\"productTitle\">{name}</h4>\n      \n\t\t<p class=\"desc\">Lorem Ipsum is simply dummy text of the printing and typesetting industry.\n             Lorem Ipsum has been the industry's standard dummy t\n             ext ever since the 1500s</p>\n\n             <button className=\"button add is-warning\" onClick={this.onchangeCount.bind(this)} style={{\"display\":this.state.visibility1}}>{this.state.message1}</button>\n             <button className=\"button add is-warning\" onClick={this.onchangeCountDec.bind(this)} style={{\"display\":this.state.visibility2}}>{this.state.message2}</button>\n\t\t\n\t\t\n\t</div>);\n      }\n}\n\nexport default Card;","import React, { Component } from \"react\";\nimport Card from \"./Card\";\n\n\n\nclass Products extends Component\n{\n      constructor(props)\n      {\n            super(props);\n            this.state = {\n                  newCount:0\n            }\n            \n      }\n\n      \n      render()\n      {\n            return(\n            <div>\n               <div className=\"hero is-light\">\n                        <div className=\"hero-body\">\n                              <div className=\"container\">\n                                    <h1 className=\"title is-size-1\">Our Products</h1>\n                                    <div className=\"columns\">\n                                          <div className=\"column\">\n                                                <Card image=\"https://source.unsplash.com/random?shoes?nike\" name=\"Nike Shoes\" changeCount={this.props.changeCounter.bind(this)}/>\n                    \n                                          </div>\n                                          <div className=\"column\">\n                                                <Card image=\"https://source.unsplash.com/random?shirts\" name=\"Shirts\" changeCount={this.props.changeCounter.bind(this)}/>\n                                          </div>\n                                          <div className=\"column\">\n                                                <Card image=\"https://source.unsplash.com/random?t-shirt\" name=\"T-Shirts\" changeCount={this.props.changeCounter.bind(this)}/>\n                                          </div>\n                                    </div>\n                                    <div className=\"columns\">\n                                          <div className=\"column\">\n                                                <Card image=\"https://source.unsplash.com/random?teddy bear\" name=\"Teddy Bear\" changeCount={this.props.changeCounter.bind(this)}/>\n                                          </div>\n                                          <div className=\"column\">\n                                                <Card image=\"https://source.unsplash.com/random?Camera\" name=\"Nikon Camera\" changeCount={this.props.changeCounter.bind(this)}/>\n                                          </div>\n                                          <div className=\"column\">\n                                                <Card image=\"https://source.unsplash.com/random?macbook\" name=\"Mackbook\" changeCount={this.props.changeCounter.bind(this)}/>\n                                          </div>\n                                    </div>\n                              </div>\n                        </div>\n                  </div>   \n            </div>\n      )\n            }\n}\n\nexport default Products;","import React from 'react';\nimport Header from './components/Header';\nimport Products from './components/Section';\n\n\nclass App extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n    this.state = {\n      count:0\n    }\n\n  }\n\n changeCount(counter)\n {\nthis.setState({count:this.state.count+counter})\n }\n  render()\n  {\n    return(<div>\n      <Header cartcount={this.state.count}/>\n      <Products changeCounter={this.changeCount.bind(this)}/>\n    </div>)\n  }\n}\n\nexport default App;\n\n\n   \n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}